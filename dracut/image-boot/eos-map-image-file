#!/bin/sh
# Copyright (C) 2016-2017 Endless Mobile, Inc.
# Licensed under the GPLv2
#
# Usage:
#  eos-map-image-file [--readonly] host-device image-path target-device-name
#
# Identifies which disk blocks correspond to image-path on host-device, and
# creates a dm-linear block device at /dev/mapper/target-device-name mapping
# them. If --readonly is given, the mapped device will be read-only.
#
set -e

if [ "$1" = "--readonly" ]; then
  shift
  dm_roflag=--readonly
fi

host_device="${1:?host device parameter missing}"
image_path="${2:?image path parameter missing}"
target_device_name="${3:?target device name parameter missing}"

if [ "$#" != "3" ]; then
  shift; shift; shift
  echo "$0: extra parameters: $@" >&2
  exit 1
fi

if ! fstype=$(lsblk --noheadings -o FSTYPE "${host_device}"); then
  echo "image-boot: failed to detect filesystem type for ${host_device}" >&2
  exit 1
fi

# Identify the EOS image extents on the host device, and create a dm-linear
# block device that maps exactly to that.
case "${fstype}" in
exfat)
  extents=$(dumpexfat -f "${image_path}" "${host_device}")
  ;;
ntfs)
  extents=$(ntfsextents "${host_device}" "${image_path}")
  ;;
*)
  echo "image-boot: unsupported filesystem ${fstype}" >&2
  exit 1
esac

if [ $? != 0 ]; then
  echo "image-boot: failed to lookup image ${image_path} on device ${host_device}" >&2
  exit 1
fi

offset=0
echo "$extents" | while read extent_offset extent_size; do
  [ -z "${extent_offset}" -o -z "${extent_size}" ] && continue
  # Convert bytes to sectors, failing if not aligned
  if [ $(( extent_size % 512 )) != 0 ]; then
    echo "image-boot: extent size $extent_size not sector-aligned" >&2
    exit 1
  fi
  extent_size=$(( extent_size / 512 ))
  extent_offset=$(( extent_offset / 512 ))
  echo "${offset} ${extent_size} linear ${host_device} $extent_offset"
  offset=$((offset + extent_size))
done > /tmp/dmtable

if [ $? != 0 ]; then
  exit 1
fi

dmsetup create $target_device_name $dm_roflag < /tmp/dmtable
if [ $? != 0 ]; then
  echo "image-boot: failed to set up linear mapping" >&2
  exit 1
fi

exit 0
